This file tests the behaviour of the `qcheck-stm` sub-command of the `dune` command
(provided by the `dune-rules` plugin).

  $ export ORTAC_ONLY_PLUGIN=dune-rules

Without the optional output argument (for the dune rules, output for the generated OCaml
has to be set), the rules are printed on stdout. This is useful to check what will be
generated.

  $ ortac dune qcheck-stm intf_spec.mli config_mod.ml test.ml --library=lib --package=my_package
  ; This file is generated by ortac dune qcheck-stm
  ; It contains the rules for generating and running QCheck-STM tests for intf_spec.mli
  
  (rule
   (alias runtest)
   (mode promote)
   (package my_package)
   (deps
    (package ortac-qcheck-stm))
   (targets test.ml)
   (action
    (setenv
     ORTAC_ONLY_PLUGIN
     qcheck-stm
     (with-stdout-to
      %{targets}
      (run
       ortac
       qcheck-stm
       %{dep:intf_spec.mli}
       %{dep:config_mod.ml}
       --quiet)))))
  
  (test
   (name test)
   (modules test)
   (libraries
    lib
    qcheck-stm.stm
    qcheck-stm.sequential
    qcheck-multicoretests-util
    ortac-runtime-qcheck-stm)
   (package my_package)
   (action
    (run
     %{test}
     --verbose)))

When the optional output argument is set, rules will be written in the file and will reflect
this fact.

  $ ortac dune qcheck-stm intf_spec.mli config_mod.ml test.ml --library=lib --package=my_package --with-stdout-to=dune.inc
  $ cat dune.inc
  ; This file is generated by ortac dune qcheck-stm
  ; It contains the rules for generating and running QCheck-STM tests for intf_spec.mli
  
  (rule
   (alias runtest)
   (mode promote)
   (package my_package)
   (deps
    (package ortac-qcheck-stm))
   (targets test.ml)
   (action
    (setenv
     ORTAC_ONLY_PLUGIN
     qcheck-stm
     (with-stdout-to
      %{targets}
      (run
       ortac
       qcheck-stm
       %{dep:intf_spec.mli}
       %{dep:config_mod.ml}
       --quiet)))))
  
  (test
   (name test)
   (modules test)
   (libraries
    lib
    qcheck-stm.stm
    qcheck-stm.sequential
    qcheck-multicoretests-util
    ortac-runtime-qcheck-stm)
   (package my_package)
   (action
    (run
     %{test}
     --verbose)))
