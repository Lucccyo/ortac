(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32-38"]
open Array
module Ortac_runtime = Ortac_runtime_qcheck_stm
module SUT =
  (Ortac_runtime.SUT.Make)(struct
                             type sut = char t
                             let init () = make 16 'a'
                           end)
module ModelElt =
  struct
    type nonrec elt =
      {
      size: Ortac_runtime.integer ;
      contents: char Ortac_runtime.Gospelstdlib.sequence }
    let init =
      let i_2 = 16
      and a_2 = 'a' in
      {
        size =
          (try Ortac_runtime.Gospelstdlib.integer_of_int i_2
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "array.mli";
                            pos_lnum = 23;
                            pos_bol = 862;
                            pos_cnum = 883
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "array.mli";
                            pos_lnum = 23;
                            pos_bol = 862;
                            pos_cnum = 884
                          }
                      })));
        contents =
          (try
             Ortac_runtime.Gospelstdlib.Sequence.init
               (Ortac_runtime.Gospelstdlib.integer_of_int i_2) (fun j -> a_2)
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "array.mli";
                            pos_lnum = 24;
                            pos_bol = 885;
                            pos_cnum = 910
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "array.mli";
                            pos_lnum = 24;
                            pos_bol = 885;
                            pos_cnum = 938
                          }
                      })))
      }
  end
module Model = (Ortac_runtime.Model.Make)(ModelElt)
module Spec =
  struct
    open STM
    module QCheck =
      struct
        include QCheck
        module Gen = struct include Gen
                            let int = small_signed_int end
      end
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type _ ty +=  
      | SUT: SUT.elt ty 
    let sut = (SUT, (fun _ -> "<sut>"))
    type sut = SUT.t
    let init_sut = SUT.create 2
    type state = Model.t
    let init_state = Model.create 2 ()
    type cmd =
      | Length 
      | Get of int 
      | Set of int * char 
      | Make of int * char 
      | Append 
      | Sub of int * int 
      | Copy 
      | Fill of int * int * char 
      | To_list 
      | Of_list of char list 
      | Mem of char 
    let show_cmd cmd__001_ =
      match cmd__001_ with
      | Length -> Format.asprintf "%s <sut>" "length"
      | Get i ->
          Format.asprintf "protect (fun () -> %s <sut> %a)" "get"
            (Util.Pp.pp_int true) i
      | Set (i_1, a_1) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "set"
            (Util.Pp.pp_int true) i_1 (Util.Pp.pp_char true) a_1
      | Make (i_2, a_2) ->
          Format.asprintf "protect (fun () -> %s %a %a)" "make"
            (Util.Pp.pp_int true) i_2 (Util.Pp.pp_char true) a_2
      | Append -> Format.asprintf "%s <sut> <sut>" "append"
      | Sub (i_3, n) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a)" "sub"
            (Util.Pp.pp_int true) i_3 (Util.Pp.pp_int true) n
      | Copy -> Format.asprintf "%s <sut>" "copy"
      | Fill (pos, len, x) ->
          Format.asprintf "protect (fun () -> %s <sut> %a %a %a)" "fill"
            (Util.Pp.pp_int true) pos (Util.Pp.pp_int true) len
            (Util.Pp.pp_char true) x
      | To_list -> Format.asprintf "%s <sut>" "to_list"
      | Of_list l ->
          Format.asprintf "%s %a" "of_list"
            (Util.Pp.pp_list Util.Pp.pp_char true) l
      | Mem a_3 ->
          Format.asprintf "%s %a <sut>" "mem" (Util.Pp.pp_char true) a_3
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd
          (let open Gen in
             oneof
               [pure Length;
               (pure (fun i -> Get i)) <*> int;
               ((pure (fun i_1 -> fun a_1 -> Set (i_1, a_1))) <*> int) <*>
                 char;
               ((pure (fun i_2 -> fun a_2 -> Make (i_2, a_2))) <*>
                  small_signed_int)
                 <*> char;
               pure Append;
               ((pure (fun i_3 -> fun n -> Sub (i_3, n))) <*> int) <*> int;
               pure Copy;
               (((pure (fun pos -> fun len -> fun x -> Fill (pos, len, x)))
                   <*> int)
                  <*> int)
                 <*> char;
               pure To_list;
               (pure (fun l -> Of_list l)) <*> (list char);
               (pure (fun a_3 -> Mem a_3)) <*> char])
    let next_state cmd__002_ state__003_ =
      match cmd__002_ with
      | Length ->
          let t_1__004_ = Model.get state__003_ 0 in
          let t_1__005_ = t_1__004_ in
          Model.push (Model.drop_n state__003_ 1) t_1__005_
      | Get i ->
          let t_2__006_ = Model.get state__003_ 0 in
          if
            (try
               let __t1__008_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i) in
               let __t2__009_ =
                 Ortac_runtime.Gospelstdlib.(<)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i)
                   t_2__006_.size in
               __t1__008_ && __t2__009_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 11;
                              pos_bol = 390;
                              pos_cnum = 401
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 11;
                              pos_bol = 390;
                              pos_cnum = 416
                            }
                        })))
          then
            let t_2__007_ = t_2__006_ in
            Model.push (Model.drop_n state__003_ 1) t_2__007_
          else state__003_
      | Set (i_1, a_1) ->
          let t_3__010_ = Model.get state__003_ 0 in
          if
            (try
               let __t1__012_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
               let __t2__013_ =
                 Ortac_runtime.Gospelstdlib.(<)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                   t_3__010_.size in
               __t1__012_ && __t2__013_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 16;
                              pos_bol = 578;
                              pos_cnum = 589
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 16;
                              pos_bol = 578;
                              pos_cnum = 604
                            }
                        })))
          then
            let t_3__011_ =
              let open ModelElt in
                {
                  t_3__010_ with
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.set
                         t_3__010_.contents
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1) a_1
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 18;
                                      pos_bol = 629;
                                      pos_cnum = 654
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 18;
                                      pos_bol = 629;
                                      pos_cnum = 687
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__003_ 1) t_3__011_
          else state__003_
      | Make (i_2, a_2) ->
          if
            (try
               Ortac_runtime.Gospelstdlib.(>=)
                 (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 22;
                              pos_bol = 844;
                              pos_cnum = 855
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 22;
                              pos_bol = 844;
                              pos_cnum = 861
                            }
                        })))
          then
            let t_4__015_ =
              let open ModelElt in
                {
                  size =
                    (try Ortac_runtime.Gospelstdlib.integer_of_int i_2
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 23;
                                      pos_bol = 862;
                                      pos_cnum = 883
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 23;
                                      pos_bol = 862;
                                      pos_cnum = 884
                                    }
                                })));
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.init
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                         (fun j -> a_2)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 24;
                                      pos_bol = 885;
                                      pos_cnum = 910
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 24;
                                      pos_bol = 885;
                                      pos_cnum = 938
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__003_ 0) t_4__015_
          else state__003_
      | Append ->
          let a_4__016_ = Model.get state__003_ 0
          and b__017_ = Model.get state__003_ 1 in
          let t_5__021_ =
            let open ModelElt in
              {
                size =
                  (try
                     Ortac_runtime.Gospelstdlib.(+) a_4__016_.size
                       b__017_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 28;
                                    pos_bol = 1097;
                                    pos_cnum = 1125
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 28;
                                    pos_bol = 1097;
                                    pos_cnum = 1126
                                  }
                              })));
                contents =
                  (try
                     Ortac_runtime.Gospelstdlib.(++) a_4__016_.contents
                       b__017_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 29;
                                    pos_bol = 1134;
                                    pos_cnum = 1170
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 29;
                                    pos_bol = 1134;
                                    pos_cnum = 1172
                                  }
                              })))
              }
          and a_4__020_ = a_4__016_
          and b__019_ = b__017_ in
          Model.push
            (Model.push (Model.push (Model.drop_n state__003_ 2) b__019_)
               a_4__020_) t_5__021_
      | Sub (i_3, n) ->
          let t_6__022_ = Model.get state__003_ 0 in
          if
            (try
               let __t1__026_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_3) in
               let __t2__027_ =
                 Ortac_runtime.Gospelstdlib.(<=)
                   (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                   (Ortac_runtime.Gospelstdlib.Sequence.length
                      t_6__022_.contents) in
               __t1__026_ && __t2__027_
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 33;
                              pos_bol = 1340;
                              pos_cnum = 1351
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 33;
                              pos_bol = 1340;
                              pos_cnum = 1387
                            }
                        })))
              &&
              ((try
                  let __t1__028_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n)) in
                  let __t2__029_ =
                    Ortac_runtime.Gospelstdlib.(<=)
                      (Ortac_runtime.Gospelstdlib.(+)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                         (Ortac_runtime.Gospelstdlib.integer_of_int n))
                      (Ortac_runtime.Gospelstdlib.Sequence.length
                         t_6__022_.contents) in
                  __t1__028_ && __t2__029_
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 34;
                                 pos_bol = 1388;
                                 pos_cnum = 1399
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 34;
                                 pos_bol = 1388;
                                 pos_cnum = 1439
                               }
                           }))))
          then
            let r__025_ =
              let open ModelElt in
                {
                  size =
                    (try Ortac_runtime.Gospelstdlib.integer_of_int n
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 35;
                                      pos_bol = 1440;
                                      pos_cnum = 1461
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 35;
                                      pos_bol = 1440;
                                      pos_cnum = 1462
                                    }
                                })));
                  contents =
                    (try
                       if
                         (Ortac_runtime.Gospelstdlib.integer_of_int n) =
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       then Ortac_runtime.Gospelstdlib.Sequence.empty
                       else
                         Ortac_runtime.Gospelstdlib.__mix_Buddub
                           t_6__022_.contents
                           (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                           (Ortac_runtime.Gospelstdlib.(-)
                              (Ortac_runtime.Gospelstdlib.(+)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int
                                    i_3)
                                 (Ortac_runtime.Gospelstdlib.integer_of_int n))
                              (Ortac_runtime.Gospelstdlib.integer_of_int 1))
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 36;
                                      pos_bol = 1463;
                                      pos_cnum = 1488
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 36;
                                      pos_bol = 1463;
                                      pos_cnum = 1542
                                    }
                                })))
                }
            and t_6__024_ = t_6__022_ in
            Model.push (Model.push (Model.drop_n state__003_ 1) t_6__024_)
              r__025_
          else state__003_
      | Copy ->
          let t_7__030_ = Model.get state__003_ 0 in
          let r_1__033_ =
            let open ModelElt in
              {
                size =
                  (try t_7__030_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 40;
                                    pos_bol = 1713;
                                    pos_cnum = 1734
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 40;
                                    pos_bol = 1713;
                                    pos_cnum = 1740
                                  }
                              })));
                contents =
                  (try t_7__030_.contents
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 41;
                                    pos_bol = 1741;
                                    pos_cnum = 1766
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 41;
                                    pos_bol = 1741;
                                    pos_cnum = 1776
                                  }
                              })))
              }
          and t_7__032_ = t_7__030_ in
          Model.push (Model.push (Model.drop_n state__003_ 1) t_7__032_)
            r_1__033_
      | Fill (pos, len, x) ->
          let t_8__034_ = Model.get state__003_ 0 in
          if
            (try
               Ortac_runtime.Gospelstdlib.(<=)
                 (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                 (Ortac_runtime.Gospelstdlib.integer_of_int pos)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 45;
                              pos_bol = 1929;
                              pos_cnum = 1940
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 45;
                              pos_bol = 1929;
                              pos_cnum = 1948
                            }
                        })))
              &&
              ((try
                  Ortac_runtime.Gospelstdlib.(<=)
                    (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                    (Ortac_runtime.Gospelstdlib.integer_of_int len)
                with
                | e ->
                    raise
                      (Ortac_runtime.Partial_function
                         (e,
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 46;
                                 pos_bol = 1949;
                                 pos_cnum = 1960
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 46;
                                 pos_bol = 1949;
                                 pos_cnum = 1968
                               }
                           })))
                 &&
                 ((try
                     Ortac_runtime.Gospelstdlib.(<=)
                       (Ortac_runtime.Gospelstdlib.(+)
                          (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                          (Ortac_runtime.Gospelstdlib.integer_of_int len))
                       t_8__034_.size
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 47;
                                    pos_bol = 1969;
                                    pos_cnum = 1980
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 47;
                                    pos_bol = 1969;
                                    pos_cnum = 1999
                                  }
                              })))))
          then
            let t_8__037_ =
              let open ModelElt in
                {
                  t_8__034_ with
                  contents =
                    (try
                       Ortac_runtime.Gospelstdlib.Sequence.init
                         (Ortac_runtime.Gospelstdlib.Sequence.length
                            t_8__034_.contents)
                         (fun i_4 ->
                            if
                              let __t1__035_ =
                                Ortac_runtime.Gospelstdlib.(<=)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     pos) i_4 in
                              let __t2__036_ =
                                Ortac_runtime.Gospelstdlib.(<) i_4
                                  (Ortac_runtime.Gospelstdlib.(+)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        pos)
                                     (Ortac_runtime.Gospelstdlib.integer_of_int
                                        len)) in
                              __t1__035_ && __t2__036_
                            then x
                            else
                              Ortac_runtime.Gospelstdlib.__mix_Bub
                                t_8__034_.contents i_4)
                     with
                     | e ->
                         raise
                           (Ortac_runtime.Partial_function
                              (e,
                                {
                                  Ortac_runtime.start =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 49;
                                      pos_bol = 2024;
                                      pos_cnum = 2049
                                    };
                                  Ortac_runtime.stop =
                                    {
                                      pos_fname = "array.mli";
                                      pos_lnum = 49;
                                      pos_bol = 2024;
                                      pos_cnum = 2164
                                    }
                                })))
                } in
            Model.push (Model.drop_n state__003_ 1) t_8__037_
          else state__003_
      | To_list ->
          let t_9__038_ = Model.get state__003_ 0 in
          let t_9__039_ = t_9__038_ in
          Model.push (Model.drop_n state__003_ 1) t_9__039_
      | Of_list l ->
          let t_10__041_ =
            let open ModelElt in
              {
                size =
                  (try Ortac_runtime.Gospelstdlib.List.length l
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 57;
                                    pos_bol = 2582;
                                    pos_cnum = 2603
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 57;
                                    pos_bol = 2582;
                                    pos_cnum = 2616
                                  }
                              })));
                contents =
                  (try Ortac_runtime.Gospelstdlib.List.to_seq l
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 58;
                                    pos_bol = 2617;
                                    pos_cnum = 2642
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 58;
                                    pos_bol = 2617;
                                    pos_cnum = 2655
                                  }
                              })))
              } in
          Model.push (Model.drop_n state__003_ 0) t_10__041_
      | Mem a_3 ->
          let t_11__042_ = Model.get state__003_ 0 in
          let t_11__043_ = t_11__042_ in
          Model.push (Model.drop_n state__003_ 1) t_11__043_
    let precond cmd__080_ state__081_ =
      match cmd__080_ with
      | Length -> true
      | Get i -> true
      | Set (i_1, a_1) -> true
      | Make (i_2, a_2) -> true
      | Append -> true
      | Sub (i_3, n) -> true
      | Copy -> true
      | Fill (pos, len, x) -> true
      | To_list -> true
      | Of_list l -> true
      | Mem a_3 -> true
    let postcond _ _ _ = true
    let run cmd__082_ sut__083_ =
      match cmd__082_ with
      | Length ->
          Res
            (int,
              (let t_1__084_ = SUT.pop sut__083_ in
               let res__085_ = length t_1__084_ in
               (SUT.push sut__083_ t_1__084_; res__085_)))
      | Get i ->
          Res
            ((result char exn),
              (let t_2__086_ = SUT.pop sut__083_ in
               let res__087_ = protect (fun () -> get t_2__086_ i) () in
               (SUT.push sut__083_ t_2__086_; res__087_)))
      | Set (i_1, a_1) ->
          Res
            ((result unit exn),
              (let t_3__088_ = SUT.pop sut__083_ in
               let res__089_ = protect (fun () -> set t_3__088_ i_1 a_1) () in
               (SUT.push sut__083_ t_3__088_; res__089_)))
      | Make (i_2, a_2) ->
          Res
            ((result sut exn),
              (let res__090_ = protect (fun () -> make i_2 a_2) () in
               ((match res__090_ with
                 | Ok res -> SUT.push sut__083_ res
                 | Error _ -> ());
                res__090_)))
      | Append ->
          Res
            (sut,
              (let a_4__091_ = SUT.pop sut__083_ in
               let b__092_ = SUT.pop sut__083_ in
               let res__093_ = append a_4__091_ b__092_ in
               (SUT.push sut__083_ b__092_;
                SUT.push sut__083_ a_4__091_;
                SUT.push sut__083_ res__093_;
                res__093_)))
      | Sub (i_3, n) ->
          Res
            ((result sut exn),
              (let t_6__094_ = SUT.pop sut__083_ in
               let res__095_ = protect (fun () -> sub t_6__094_ i_3 n) () in
               (SUT.push sut__083_ t_6__094_;
                (match res__095_ with
                 | Ok res -> SUT.push sut__083_ res
                 | Error _ -> ());
                res__095_)))
      | Copy ->
          Res
            (sut,
              (let t_7__096_ = SUT.pop sut__083_ in
               let res__097_ = copy t_7__096_ in
               (SUT.push sut__083_ t_7__096_;
                SUT.push sut__083_ res__097_;
                res__097_)))
      | Fill (pos, len, x) ->
          Res
            ((result unit exn),
              (let t_8__098_ = SUT.pop sut__083_ in
               let res__099_ =
                 protect (fun () -> fill t_8__098_ pos len x) () in
               (SUT.push sut__083_ t_8__098_; res__099_)))
      | To_list ->
          Res
            ((list char),
              (let t_9__100_ = SUT.pop sut__083_ in
               let res__101_ = to_list t_9__100_ in
               (SUT.push sut__083_ t_9__100_; res__101_)))
      | Of_list l ->
          Res
            (sut,
              (let res__102_ = of_list l in
               (SUT.push sut__083_ res__102_; res__102_)))
      | Mem a_3 ->
          Res
            (bool,
              (let t_11__103_ = SUT.pop sut__083_ in
               let res__104_ = mem a_3 t_11__103_ in
               (SUT.push sut__083_ t_11__103_; res__104_)))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () = ()
let ortac_show_cmd cmd__106_ state__107_ last__109_ res__108_ =
  let open Spec in
    let open STM in
      match (cmd__106_, res__108_) with
      | (Length, Res ((Int, _), _)) ->
          let lhs = if last__109_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "length"
            (SUT.get_name state__107_ (0 + shift))
      | (Get i, Res ((Result (Char, Exn), _), _)) ->
          let lhs = if last__109_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a)" lhs "get"
            (SUT.get_name state__107_ (0 + shift)) (Util.Pp.pp_int true) i
      | (Set (i_1, a_1), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__109_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "set" (SUT.get_name state__107_ (0 + shift))
            (Util.Pp.pp_int true) i_1 (Util.Pp.pp_char true) a_1
      | (Make (i_2, a_2), Res ((Result (SUT, Exn), _), t_4)) ->
          let lhs =
            if last__109_
            then "r"
            else
              (match t_4 with
               | Ok _ -> "Ok " ^ (SUT.get_name state__107_ 0)
               | Error _ -> "_")
          and shift = match t_4 with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %a %a)" lhs "make"
            (Util.Pp.pp_int true) i_2 (Util.Pp.pp_char true) a_2
      | (Append, Res ((SUT, _), t_5)) ->
          let lhs = if last__109_ then "r" else SUT.get_name state__107_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s %s" lhs "append"
            (SUT.get_name state__107_ (0 + shift))
            (SUT.get_name state__107_ (1 + shift))
      | (Sub (i_3, n), Res ((Result (SUT, Exn), _), r)) ->
          let lhs =
            if last__109_
            then "r"
            else
              (match r with
               | Ok _ -> "Ok " ^ (SUT.get_name state__107_ 0)
               | Error _ -> "_")
          and shift = match r with | Ok _ -> 1 | Error _ -> 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a)" lhs
            "sub" (SUT.get_name state__107_ (0 + shift))
            (Util.Pp.pp_int true) i_3 (Util.Pp.pp_int true) n
      | (Copy, Res ((SUT, _), r_1)) ->
          let lhs = if last__109_ then "r" else SUT.get_name state__107_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %s" lhs "copy"
            (SUT.get_name state__107_ (0 + shift))
      | (Fill (pos, len, x), Res ((Result (Unit, Exn), _), _)) ->
          let lhs = if last__109_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = protect (fun () -> %s %s %a %a %a)" lhs
            "fill" (SUT.get_name state__107_ (0 + shift))
            (Util.Pp.pp_int true) pos (Util.Pp.pp_int true) len
            (Util.Pp.pp_char true) x
      | (To_list, Res ((List (Char), _), _)) ->
          let lhs = if last__109_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %s" lhs "to_list"
            (SUT.get_name state__107_ (0 + shift))
      | (Of_list l, Res ((SUT, _), t_10)) ->
          let lhs = if last__109_ then "r" else SUT.get_name state__107_ 0
          and shift = 1 in
          Format.asprintf "let %s = %s %a" lhs "of_list"
            (Util.Pp.pp_list Util.Pp.pp_char true) l
      | (Mem a_3, Res ((Bool, _), _)) ->
          let lhs = if last__109_ then "r" else "_"
          and shift = 0 in
          Format.asprintf "let %s = %s %a %s" lhs "mem"
            (Util.Pp.pp_char true) a_3 (SUT.get_name state__107_ (0 + shift))
      | _ -> assert false
let ortac_postcond cmd__044_ state__045_ res__046_ =
  let open Spec in
    let open STM in
      let new_state__047_ = lazy (next_state cmd__044_ state__045_) in
      match (cmd__044_, res__046_) with
      | (Length, Res ((Int, _), i_5)) ->
          if
            let t_old__050_ = Model.get state__045_ 0
            and t_new__051_ = lazy (Model.get (Lazy.force new_state__047_) 0) in
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int i_5) =
                 (Lazy.force t_new__051_).size
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 7;
                              pos_bol = 250;
                              pos_cnum = 262
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 7;
                              pos_bol = 250;
                              pos_cnum = 272
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Array" "make 16 'a'"
                 (Ortac_runtime.Value
                    (Res
                       (integer,
                         (let t_old__048_ = Model.get state__045_ 0
                          and t_new__049_ =
                            lazy (Model.get (Lazy.force new_state__047_) 0) in
                          try (Lazy.force t_new__049_).size
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "array.mli";
                                           pos_lnum = 7;
                                           pos_bol = 250;
                                           pos_cnum = 266
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "array.mli";
                                           pos_lnum = 7;
                                           pos_bol = 250;
                                           pos_cnum = 272
                                         }
                                     })))))) "length"
                 [("i = t.size",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 7;
                          pos_bol = 250;
                          pos_cnum = 262
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 7;
                          pos_bol = 250;
                          pos_cnum = 272
                        }
                    })])
      | (Get i, Res ((Result (Char, Exn), _), a_5)) ->
          (match if
                   let tmp__057_ = Model.get state__045_ 0 in
                   try
                     let __t1__058_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i) in
                     let __t2__059_ =
                       Ortac_runtime.Gospelstdlib.(<)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i)
                         tmp__057_.size in
                     __t1__058_ && __t2__059_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 11;
                                    pos_bol = 390;
                                    pos_cnum = 401
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 11;
                                    pos_bol = 390;
                                    pos_cnum = 416
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Array" "make 16 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "get"
                        [("0 <= i < t.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 11;
                                 pos_bol = 390;
                                 pos_cnum = 401
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 11;
                                 pos_bol = 390;
                                 pos_cnum = 416
                               }
                           })])
           with
           | None ->
               (match a_5 with
                | Ok a_5 ->
                    if
                      let t_old__055_ = Model.get state__045_ 0
                      and t_new__056_ =
                        lazy (Model.get (Lazy.force new_state__047_) 0) in
                      (try
                         a_5 =
                           (Ortac_runtime.Gospelstdlib.__mix_Bub
                              (Lazy.force t_new__056_).contents
                              (Ortac_runtime.Gospelstdlib.integer_of_int i))
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 12;
                                        pos_bol = 417;
                                        pos_cnum = 429
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 12;
                                        pos_bol = 417;
                                        pos_cnum = 446
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Protected_value
                              (Res
                                 (char,
                                   (let t_old__053_ = Model.get state__045_ 0
                                    and t_new__054_ =
                                      lazy
                                        (Model.get
                                           (Lazy.force new_state__047_) 0) in
                                    try
                                      Ortac_runtime.Gospelstdlib.__mix_Bub
                                        (Lazy.force t_new__054_).contents
                                        (Ortac_runtime.Gospelstdlib.integer_of_int
                                           i)
                                    with
                                    | e ->
                                        raise
                                          (Ortac_runtime.Partial_function
                                             (e,
                                               {
                                                 Ortac_runtime.start =
                                                   {
                                                     pos_fname = "array.mli";
                                                     pos_lnum = 12;
                                                     pos_bol = 417;
                                                     pos_cnum = 443
                                                   };
                                                 Ortac_runtime.stop =
                                                   {
                                                     pos_fname = "array.mli";
                                                     pos_lnum = 12;
                                                     pos_bol = 417;
                                                     pos_cnum = 444
                                                   }
                                               })))))) "get"
                           [("a = t.contents[i]",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 12;
                                    pos_bol = 417;
                                    pos_cnum = 429
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 12;
                                    pos_bol = 417;
                                    pos_cnum = 446
                                  }
                              })])
                | _ -> None)
           | _ ->
               (match a_5 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__057_ = Model.get state__045_ 0 in
                      (try
                         let __t1__058_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i) in
                         let __t2__059_ =
                           Ortac_runtime.Gospelstdlib.(<)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i)
                             tmp__057_.size in
                         __t1__058_ && __t2__059_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 11;
                                        pos_bol = 390;
                                        pos_cnum = 401
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 11;
                                        pos_bol = 390;
                                        pos_cnum = 416
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "get"
                           [("0 <= i < t.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 11;
                                    pos_bol = 390;
                                    pos_cnum = 401
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 11;
                                    pos_bol = 390;
                                    pos_cnum = 416
                                  }
                              })])))
      | (Set (i_1, a_1), Res ((Result (Unit, Exn), _), res)) ->
          (match if
                   let tmp__060_ = Model.get state__045_ 0 in
                   try
                     let __t1__061_ =
                       Ortac_runtime.Gospelstdlib.(<=)
                         (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                     let __t2__062_ =
                       Ortac_runtime.Gospelstdlib.(<)
                         (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                         tmp__060_.size in
                     __t1__061_ && __t2__062_
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 16;
                                    pos_bol = 578;
                                    pos_cnum = 589
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 16;
                                    pos_bol = 578;
                                    pos_cnum = 604
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Array" "make 16 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "set"
                        [("0 <= i < t.size",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 16;
                                 pos_bol = 578;
                                 pos_cnum = 589
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 16;
                                 pos_bol = 578;
                                 pos_cnum = 604
                               }
                           })])
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      let tmp__060_ = Model.get state__045_ 0 in
                      (try
                         let __t1__061_ =
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1) in
                         let __t2__062_ =
                           Ortac_runtime.Gospelstdlib.(<)
                             (Ortac_runtime.Gospelstdlib.integer_of_int i_1)
                             tmp__060_.size in
                         __t1__061_ && __t2__062_
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 16;
                                        pos_bol = 578;
                                        pos_cnum = 589
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 16;
                                        pos_bol = 578;
                                        pos_cnum = 604
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "set"
                           [("0 <= i < t.size",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 16;
                                    pos_bol = 578;
                                    pos_cnum = 589
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 16;
                                    pos_bol = 578;
                                    pos_cnum = 604
                                  }
                              })])))
      | (Make (i_2, a_2), Res ((Result (SUT, Exn), _), t_4)) ->
          (match if
                   try
                     Ortac_runtime.Gospelstdlib.(>=)
                       (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                       (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                   with
                   | e ->
                       raise
                         (Ortac_runtime.Partial_function
                            (e,
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 22;
                                    pos_bol = 844;
                                    pos_cnum = 855
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 22;
                                    pos_bol = 844;
                                    pos_cnum = 861
                                  }
                              }))
                 then None
                 else
                   Some
                     (Ortac_runtime.report "Array" "make 16 'a'"
                        (Ortac_runtime.Exception "Invalid_argument") "make"
                        [("i >= 0",
                           {
                             Ortac_runtime.start =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 22;
                                 pos_bol = 844;
                                 pos_cnum = 855
                               };
                             Ortac_runtime.stop =
                               {
                                 pos_fname = "array.mli";
                                 pos_lnum = 22;
                                 pos_bol = 844;
                                 pos_cnum = 861
                               }
                           })])
           with
           | None -> (match t_4 with | Ok t_4 -> None | _ -> None)
           | _ ->
               (match t_4 with
                | Error (Invalid_argument _) -> None
                | _ ->
                    if
                      (try
                         Ortac_runtime.Gospelstdlib.(>=)
                           (Ortac_runtime.Gospelstdlib.integer_of_int i_2)
                           (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                       with
                       | e ->
                           raise
                             (Ortac_runtime.Partial_function
                                (e,
                                  {
                                    Ortac_runtime.start =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 22;
                                        pos_bol = 844;
                                        pos_cnum = 855
                                      };
                                    Ortac_runtime.stop =
                                      {
                                        pos_fname = "array.mli";
                                        pos_lnum = 22;
                                        pos_bol = 844;
                                        pos_cnum = 861
                                      }
                                  })))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "make"
                           [("i >= 0",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 22;
                                    pos_bol = 844;
                                    pos_cnum = 855
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 22;
                                    pos_bol = 844;
                                    pos_cnum = 861
                                  }
                              })])))
      | (Append, Res ((SUT, _), t_5)) -> None
      | (Sub (i_3, n), Res ((Result (SUT, Exn), _), r)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__065_ = Model.get state__045_ 0 in
                      try
                        let __t1__066_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_3) in
                        let __t2__067_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                            (Ortac_runtime.Gospelstdlib.Sequence.length
                               tmp__065_.contents) in
                        __t1__066_ && __t2__067_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 33;
                                       pos_bol = 1340;
                                       pos_cnum = 1351
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 33;
                                       pos_bol = 1340;
                                       pos_cnum = 1387
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "sub"
                           [("0 <= i <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 33;
                                    pos_bol = 1340;
                                    pos_cnum = 1351
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 33;
                                    pos_bol = 1340;
                                    pos_cnum = 1387
                                  }
                              })]))
                   (if
                      let tmp__065_ = Model.get state__045_ 0 in
                      try
                        let __t1__068_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.integer_of_int n)) in
                        let __t2__069_ =
                          Ortac_runtime.Gospelstdlib.(<=)
                            (Ortac_runtime.Gospelstdlib.(+)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.integer_of_int n))
                            (Ortac_runtime.Gospelstdlib.Sequence.length
                               tmp__065_.contents) in
                        __t1__068_ && __t2__069_
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 34;
                                       pos_bol = 1388;
                                       pos_cnum = 1399
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 34;
                                       pos_bol = 1388;
                                       pos_cnum = 1439
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument") "sub"
                           [("i <= i + n <= Sequence.length t.contents",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 34;
                                    pos_bol = 1388;
                                    pos_cnum = 1399
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 34;
                                    pos_bol = 1388;
                                    pos_cnum = 1439
                                  }
                              })]))
           with
           | None -> (match r with | Ok r -> None | _ -> None)
           | _ ->
               (match r with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__065_ = Model.get state__045_ 0 in
                         try
                           let __t1__066_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3) in
                           let __t2__067_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__065_.contents) in
                           __t1__066_ && __t2__067_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 33;
                                          pos_bol = 1340;
                                          pos_cnum = 1351
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 33;
                                          pos_bol = 1340;
                                          pos_cnum = 1387
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("0 <= i <= Sequence.length t.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 33;
                                       pos_bol = 1340;
                                       pos_cnum = 1351
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 33;
                                       pos_bol = 1340;
                                       pos_cnum = 1387
                                     }
                                 })]))
                      (if
                         let tmp__065_ = Model.get state__045_ 0 in
                         try
                           let __t1__068_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.integer_of_int i_3)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i_3)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     n)) in
                           let __t2__069_ =
                             Ortac_runtime.Gospelstdlib.(<=)
                               (Ortac_runtime.Gospelstdlib.(+)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     i_3)
                                  (Ortac_runtime.Gospelstdlib.integer_of_int
                                     n))
                               (Ortac_runtime.Gospelstdlib.Sequence.length
                                  tmp__065_.contents) in
                           __t1__068_ && __t2__069_
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 34;
                                          pos_bol = 1388;
                                          pos_cnum = 1399
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 34;
                                          pos_bol = 1388;
                                          pos_cnum = 1439
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "sub"
                              [("i <= i + n <= Sequence.length t.contents",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 34;
                                       pos_bol = 1388;
                                       pos_cnum = 1399
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 34;
                                       pos_bol = 1388;
                                       pos_cnum = 1439
                                     }
                                 })]))))
      | (Copy, Res ((SUT, _), r_1)) -> None
      | (Fill (pos, len, x), Res ((Result (Unit, Exn), _), res)) ->
          (match Ortac_runtime.append
                   (if
                      let tmp__071_ = Model.get state__045_ 0 in
                      try
                        Ortac_runtime.Gospelstdlib.(<=)
                          (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                          (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                      with
                      | e ->
                          raise
                            (Ortac_runtime.Partial_function
                               (e,
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 45;
                                       pos_bol = 1929;
                                       pos_cnum = 1940
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 45;
                                       pos_bol = 1929;
                                       pos_cnum = 1948
                                     }
                                 }))
                    then None
                    else
                      Some
                        (Ortac_runtime.report "Array" "make 16 'a'"
                           (Ortac_runtime.Exception "Invalid_argument")
                           "fill"
                           [("0 <= pos",
                              {
                                Ortac_runtime.start =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 45;
                                    pos_bol = 1929;
                                    pos_cnum = 1940
                                  };
                                Ortac_runtime.stop =
                                  {
                                    pos_fname = "array.mli";
                                    pos_lnum = 45;
                                    pos_bol = 1929;
                                    pos_cnum = 1948
                                  }
                              })]))
                   (Ortac_runtime.append
                      (if
                         let tmp__071_ = Model.get state__045_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int len)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 46;
                                          pos_bol = 1949;
                                          pos_cnum = 1960
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 46;
                                          pos_bol = 1949;
                                          pos_cnum = 1968
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "fill"
                              [("0 <= len",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 46;
                                       pos_bol = 1949;
                                       pos_cnum = 1960
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 46;
                                       pos_bol = 1949;
                                       pos_cnum = 1968
                                     }
                                 })]))
                      (if
                         let tmp__071_ = Model.get state__045_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.(+)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   pos)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   len)) tmp__071_.size
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 47;
                                          pos_bol = 1969;
                                          pos_cnum = 1980
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 47;
                                          pos_bol = 1969;
                                          pos_cnum = 1999
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "fill"
                              [("pos + len <= t.size",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 47;
                                       pos_bol = 1969;
                                       pos_cnum = 1980
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 47;
                                       pos_bol = 1969;
                                       pos_cnum = 1999
                                     }
                                 })])))
           with
           | None -> (match res with | Ok _ -> None | _ -> None)
           | _ ->
               (match res with
                | Error (Invalid_argument _) -> None
                | _ ->
                    Ortac_runtime.append
                      (if
                         let tmp__071_ = Model.get state__045_ 0 in
                         try
                           Ortac_runtime.Gospelstdlib.(<=)
                             (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                             (Ortac_runtime.Gospelstdlib.integer_of_int pos)
                         with
                         | e ->
                             raise
                               (Ortac_runtime.Partial_function
                                  (e,
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 45;
                                          pos_bol = 1929;
                                          pos_cnum = 1940
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 45;
                                          pos_bol = 1929;
                                          pos_cnum = 1948
                                        }
                                    }))
                       then None
                       else
                         Some
                           (Ortac_runtime.report "Array" "make 16 'a'"
                              (Ortac_runtime.Exception "Invalid_argument")
                              "fill"
                              [("0 <= pos",
                                 {
                                   Ortac_runtime.start =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 45;
                                       pos_bol = 1929;
                                       pos_cnum = 1940
                                     };
                                   Ortac_runtime.stop =
                                     {
                                       pos_fname = "array.mli";
                                       pos_lnum = 45;
                                       pos_bol = 1929;
                                       pos_cnum = 1948
                                     }
                                 })]))
                      (Ortac_runtime.append
                         (if
                            let tmp__071_ = Model.get state__045_ 0 in
                            try
                              Ortac_runtime.Gospelstdlib.(<=)
                                (Ortac_runtime.Gospelstdlib.integer_of_int 0)
                                (Ortac_runtime.Gospelstdlib.integer_of_int
                                   len)
                            with
                            | e ->
                                raise
                                  (Ortac_runtime.Partial_function
                                     (e,
                                       {
                                         Ortac_runtime.start =
                                           {
                                             pos_fname = "array.mli";
                                             pos_lnum = 46;
                                             pos_bol = 1949;
                                             pos_cnum = 1960
                                           };
                                         Ortac_runtime.stop =
                                           {
                                             pos_fname = "array.mli";
                                             pos_lnum = 46;
                                             pos_bol = 1949;
                                             pos_cnum = 1968
                                           }
                                       }))
                          then None
                          else
                            Some
                              (Ortac_runtime.report "Array" "make 16 'a'"
                                 (Ortac_runtime.Exception "Invalid_argument")
                                 "fill"
                                 [("0 <= len",
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 46;
                                          pos_bol = 1949;
                                          pos_cnum = 1960
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 46;
                                          pos_bol = 1949;
                                          pos_cnum = 1968
                                        }
                                    })]))
                         (if
                            let tmp__071_ = Model.get state__045_ 0 in
                            try
                              Ortac_runtime.Gospelstdlib.(<=)
                                (Ortac_runtime.Gospelstdlib.(+)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      pos)
                                   (Ortac_runtime.Gospelstdlib.integer_of_int
                                      len)) tmp__071_.size
                            with
                            | e ->
                                raise
                                  (Ortac_runtime.Partial_function
                                     (e,
                                       {
                                         Ortac_runtime.start =
                                           {
                                             pos_fname = "array.mli";
                                             pos_lnum = 47;
                                             pos_bol = 1969;
                                             pos_cnum = 1980
                                           };
                                         Ortac_runtime.stop =
                                           {
                                             pos_fname = "array.mli";
                                             pos_lnum = 47;
                                             pos_bol = 1969;
                                             pos_cnum = 1999
                                           }
                                       }))
                          then None
                          else
                            Some
                              (Ortac_runtime.report "Array" "make 16 'a'"
                                 (Ortac_runtime.Exception "Invalid_argument")
                                 "fill"
                                 [("pos + len <= t.size",
                                    {
                                      Ortac_runtime.start =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 47;
                                          pos_bol = 1969;
                                          pos_cnum = 1980
                                        };
                                      Ortac_runtime.stop =
                                        {
                                          pos_fname = "array.mli";
                                          pos_lnum = 47;
                                          pos_bol = 1969;
                                          pos_cnum = 1999
                                        }
                                    })])))))
      | (To_list, Res ((List (Char), _), l_1)) ->
          if
            let t_old__074_ = Model.get state__045_ 0
            and t_new__075_ = lazy (Model.get (Lazy.force new_state__047_) 0) in
            (try
               l_1 =
                 (Ortac_runtime.Gospelstdlib.List.of_seq
                    (Lazy.force t_new__075_).contents)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 53;
                              pos_bol = 2405;
                              pos_cnum = 2417
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 53;
                              pos_bol = 2405;
                              pos_cnum = 2443
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Array" "make 16 'a'"
                 (Ortac_runtime.Value
                    (Res
                       ((list char),
                         (let t_old__072_ = Model.get state__045_ 0
                          and t_new__073_ =
                            lazy (Model.get (Lazy.force new_state__047_) 0) in
                          try
                            Ortac_runtime.Gospelstdlib.List.of_seq
                              (Lazy.force t_new__073_).contents
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "array.mli";
                                           pos_lnum = 53;
                                           pos_bol = 2405;
                                           pos_cnum = 2421
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "array.mli";
                                           pos_lnum = 53;
                                           pos_bol = 2405;
                                           pos_cnum = 2443
                                         }
                                     })))))) "to_list"
                 [("l = List.of_seq t.contents",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 53;
                          pos_bol = 2405;
                          pos_cnum = 2417
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 53;
                          pos_bol = 2405;
                          pos_cnum = 2443
                        }
                    })])
      | (Of_list l, Res ((SUT, _), t_10)) -> None
      | (Mem a_3, Res ((Bool, _), b_1)) ->
          if
            let t_old__077_ = Model.get state__045_ 0
            and t_new__078_ = lazy (Model.get (Lazy.force new_state__047_) 0) in
            (try
               (b_1 = true) =
                 (Ortac_runtime.Gospelstdlib.Sequence.mem
                    (Lazy.force t_new__078_).contents a_3)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 62;
                              pos_bol = 2791;
                              pos_cnum = 2803
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "array.mli";
                              pos_lnum = 62;
                              pos_bol = 2791;
                              pos_cnum = 2832
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Array" "make 16 'a'"
                 (Ortac_runtime.Value (Res (Ortac_runtime.dummy, ()))) "mem"
                 [("b = Sequence.mem t.contents a",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 62;
                          pos_bol = 2791;
                          pos_cnum = 2803
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "array.mli";
                          pos_lnum = 62;
                          pos_bol = 2791;
                          pos_cnum = 2832
                        }
                    })])
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Array STM tests" 2 check_init_state
        ortac_show_cmd ortac_postcond])
