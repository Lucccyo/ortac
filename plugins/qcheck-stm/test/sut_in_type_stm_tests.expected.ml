(* This file is generated by ortac qcheck-stm,
   edit how you run the tool instead *)
[@@@ocaml.warning "-26-27-69-32"]
open Sut_in_type
module Ortac_runtime = Ortac_runtime_qcheck_stm
module Spec =
  struct
    open STM
    module QCheck =
      struct
        include QCheck
        module Gen = struct include Gen
                            let int = small_signed_int end
      end
    type _ ty +=  
      | Integer: Ortac_runtime.integer ty 
    let integer = (Integer, Ortac_runtime.string_of_integer)
    type sut = int t
    type cmd =
      | Sut_in_type of char t list 
      | Sut_in_tuple of (char t * int) 
      | Sut_in_nested_type of char t list list 
      | Sut_nested_in_tuple of (char t list * int) 
    let show_cmd cmd__001_ =
      match cmd__001_ with
      | Sut_in_type ts ->
          Format.asprintf "%s %a" "sut_in_type"
            (Util.Pp.pp_list (Util.Pp.pp_t Util.Pp.pp_char) true) ts
      | Sut_in_tuple a_1 ->
          Format.asprintf "%s %a" "sut_in_tuple"
            (Util.Pp.pp_tuple2 (Util.Pp.pp_t Util.Pp.pp_char) Util.Pp.pp_int
               true) a_1
      | Sut_in_nested_type ts_1 ->
          Format.asprintf "%s %a" "sut_in_nested_type"
            (Util.Pp.pp_list (Util.Pp.pp_list (Util.Pp.pp_t Util.Pp.pp_char))
               true) ts_1
      | Sut_nested_in_tuple a_2 ->
          Format.asprintf "%s %a" "sut_nested_in_tuple"
            (Util.Pp.pp_tuple2
               (Util.Pp.pp_list (Util.Pp.pp_t Util.Pp.pp_char))
               Util.Pp.pp_int true) a_2
    type nonrec state = {
      contents: int list }
    let init_state =
      let i = 16
      and a_3 = 0 in
      {
        contents =
          (try
             Ortac_runtime.Gospelstdlib.List.init
               (Ortac_runtime.Gospelstdlib.integer_of_int i) (fun j -> a_3)
           with
           | e ->
               raise
                 (Ortac_runtime.Partial_function
                    (e,
                      {
                        Ortac_runtime.start =
                          {
                            pos_fname = "sut_in_type.mli";
                            pos_lnum = 6;
                            pos_bol = 245;
                            pos_cnum = 270
                          };
                        Ortac_runtime.stop =
                          {
                            pos_fname = "sut_in_type.mli";
                            pos_lnum = 6;
                            pos_bol = 245;
                            pos_cnum = 294
                          }
                      })))
      }
    let init_sut () = make 16 0
    let cleanup _ = ()
    let arb_cmd _ =
      let open QCheck in
        make ~print:show_cmd
          (let open Gen in
             oneof
               [(pure (fun ts -> Sut_in_type ts)) <*> (list (t char));
               (pure (fun a_1 -> Sut_in_tuple a_1)) <*> (tup2 (t char) int);
               (pure (fun ts_1 -> Sut_in_nested_type ts_1)) <*>
                 (list (list (t char)));
               (pure (fun a_2 -> Sut_nested_in_tuple a_2)) <*>
                 (tup2 (list (t char)) int)])
    let next_state cmd__002_ state__003_ =
      match cmd__002_ with
      | Sut_in_type ts -> state__003_
      | Sut_in_tuple a_1 -> state__003_
      | Sut_in_nested_type ts_1 -> state__003_
      | Sut_nested_in_tuple a_2 -> state__003_
    let precond cmd__008_ state__009_ =
      match cmd__008_ with
      | Sut_in_type ts -> true
      | Sut_in_tuple a_1 -> true
      | Sut_in_nested_type ts_1 -> true
      | Sut_nested_in_tuple a_2 -> true
    let postcond _ _ _ = true
    let run cmd__010_ sut__011_ =
      match cmd__010_ with
      | Sut_in_type ts -> Res (int, (sut_in_type ts))
      | Sut_in_tuple a_1 -> Res (bool, (sut_in_tuple a_1))
      | Sut_in_nested_type ts_1 -> Res (bool, (sut_in_nested_type ts_1))
      | Sut_nested_in_tuple a_2 -> Res (bool, (sut_nested_in_tuple a_2))
  end
module STMTests = (Ortac_runtime.Make)(Spec)
let check_init_state () = ()
let ortac_postcond cmd__004_ state__005_ res__006_ =
  let open Spec in
    let open STM in
      let new_state__007_ = lazy (next_state cmd__004_ state__005_) in
      match (cmd__004_, res__006_) with
      | (Sut_in_type ts, Res ((Int, _), r)) ->
          if
            (try
               (Ortac_runtime.Gospelstdlib.integer_of_int r) =
                 (Ortac_runtime.Gospelstdlib.List.length ts)
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "sut_in_type.mli";
                              pos_lnum = 10;
                              pos_bol = 464;
                              pos_cnum = 476
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "sut_in_type.mli";
                              pos_lnum = 10;
                              pos_bol = 464;
                              pos_cnum = 494
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Sut_in_type" "make 16 0"
                 (Either.right
                    (Res
                       (integer,
                         (try Ortac_runtime.Gospelstdlib.List.length ts
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "sut_in_type.mli";
                                           pos_lnum = 10;
                                           pos_bol = 464;
                                           pos_cnum = 480
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "sut_in_type.mli";
                                           pos_lnum = 10;
                                           pos_bol = 464;
                                           pos_cnum = 494
                                         }
                                     })))))) "sut_in_type"
                 [("r = List.length ts",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "sut_in_type.mli";
                          pos_lnum = 10;
                          pos_bol = 464;
                          pos_cnum = 476
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "sut_in_type.mli";
                          pos_lnum = 10;
                          pos_bol = 464;
                          pos_cnum = 494
                        }
                    })])
      | (Sut_in_tuple a_1, Res ((Bool, _), r_1)) ->
          if
            (try r_1 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "sut_in_type.mli";
                              pos_lnum = 14;
                              pos_bol = 650;
                              pos_cnum = 662
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "sut_in_type.mli";
                              pos_lnum = 14;
                              pos_bol = 650;
                              pos_cnum = 670
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Sut_in_type" "make 16 0"
                 (Either.right
                    (Res
                       (bool,
                         (try true
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "sut_in_type.mli";
                                           pos_lnum = 14;
                                           pos_bol = 650;
                                           pos_cnum = 666
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "sut_in_type.mli";
                                           pos_lnum = 14;
                                           pos_bol = 650;
                                           pos_cnum = 670
                                         }
                                     })))))) "sut_in_tuple"
                 [("r = true",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "sut_in_type.mli";
                          pos_lnum = 14;
                          pos_bol = 650;
                          pos_cnum = 662
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "sut_in_type.mli";
                          pos_lnum = 14;
                          pos_bol = 650;
                          pos_cnum = 670
                        }
                    })])
      | (Sut_in_nested_type ts_1, Res ((Bool, _), r_2)) ->
          if
            (try r_2 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "sut_in_type.mli";
                              pos_lnum = 18;
                              pos_bol = 833;
                              pos_cnum = 845
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "sut_in_type.mli";
                              pos_lnum = 18;
                              pos_bol = 833;
                              pos_cnum = 853
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Sut_in_type" "make 16 0"
                 (Either.right
                    (Res
                       (bool,
                         (try true
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "sut_in_type.mli";
                                           pos_lnum = 18;
                                           pos_bol = 833;
                                           pos_cnum = 849
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "sut_in_type.mli";
                                           pos_lnum = 18;
                                           pos_bol = 833;
                                           pos_cnum = 853
                                         }
                                     })))))) "sut_in_nested_type"
                 [("r = true",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "sut_in_type.mli";
                          pos_lnum = 18;
                          pos_bol = 833;
                          pos_cnum = 845
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "sut_in_type.mli";
                          pos_lnum = 18;
                          pos_bol = 833;
                          pos_cnum = 853
                        }
                    })])
      | (Sut_nested_in_tuple a_2, Res ((Bool, _), r_3)) ->
          if
            (try r_3 = true
             with
             | e ->
                 raise
                   (Ortac_runtime.Partial_function
                      (e,
                        {
                          Ortac_runtime.start =
                            {
                              pos_fname = "sut_in_type.mli";
                              pos_lnum = 22;
                              pos_bol = 1018;
                              pos_cnum = 1030
                            };
                          Ortac_runtime.stop =
                            {
                              pos_fname = "sut_in_type.mli";
                              pos_lnum = 22;
                              pos_bol = 1018;
                              pos_cnum = 1038
                            }
                        })))
          then None
          else
            Some
              (Ortac_runtime.report "Sut_in_type" "make 16 0"
                 (Either.right
                    (Res
                       (bool,
                         (try true
                          with
                          | e ->
                              raise
                                (Ortac_runtime.Partial_function
                                   (e,
                                     {
                                       Ortac_runtime.start =
                                         {
                                           pos_fname = "sut_in_type.mli";
                                           pos_lnum = 22;
                                           pos_bol = 1018;
                                           pos_cnum = 1034
                                         };
                                       Ortac_runtime.stop =
                                         {
                                           pos_fname = "sut_in_type.mli";
                                           pos_lnum = 22;
                                           pos_bol = 1018;
                                           pos_cnum = 1038
                                         }
                                     })))))) "sut_nested_in_tuple"
                 [("r = true",
                    {
                      Ortac_runtime.start =
                        {
                          pos_fname = "sut_in_type.mli";
                          pos_lnum = 22;
                          pos_bol = 1018;
                          pos_cnum = 1030
                        };
                      Ortac_runtime.stop =
                        {
                          pos_fname = "sut_in_type.mli";
                          pos_lnum = 22;
                          pos_bol = 1018;
                          pos_cnum = 1038
                        }
                    })])
      | _ -> None
let _ =
  QCheck_base_runner.run_tests_main
    (let count = 1000 in
     [STMTests.agree_test ~count ~name:"Sut_in_type STM tests"
        check_init_state ortac_postcond])
